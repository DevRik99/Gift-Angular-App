{"version":3,"sources":["./src/app/Componentes/gif-grid/gif-grid.component.ts","./src/app/Componentes/gif-grid/gif-grid.component.html","./src/environments/environment.ts","./src/app/Componentes/form-gif/form-gif.component.ts","./src/app/Componentes/form-gif/form-gif.component.html","./src/app/Componentes/gif-grit-item/gif-grit-item.component.ts","./src/app/Componentes/gif-grit-item/gif-grit-item.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/Services/categorias.service.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CategoriasService } from 'src/app/Services/categorias.service';\n\n@Component({\n  selector: 'app-gif-grid',\n  templateUrl: './gif-grid.component.html',\n  styleUrls: ['./gif-grid.component.scss'],\n})\nexport class GifGridComponent implements OnInit {\n  constructor(public categoriasService: CategoriasService) {}\n  ngOnInit(): void {}\n}\n","<app-form-gif></app-form-gif>\n<div>\n  <ul>\n    <li *ngFor=\"let categoria of this.categoriasService.categorias\">\n      <a [href]=\"'#'+categoria\">\n        {{categoria}}\n      </a>\n    </li>\n  </ul>\n  <div *ngFor=\"let categoria of this.categoriasService.categorias\" class=\"container\">\n    <h3 [id]='categoria' class=\"categoria\"> {{categoria}} </h3>\n    <app-gif-grit-item [categoria]='categoria'></app-gif-grit-item>\n  </div>\n\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { CategoriasService } from 'src/app/Services/categorias.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-gif',\n  templateUrl: './form-gif.component.html',\n  styleUrls: ['./form-gif.component.scss'],\n})\nexport class FormGifComponent implements OnInit {\n  form: FormGroup;\n  constructor(private categoriasService: CategoriasService) {\n    this.buildForm();\n  }\n\n  ngOnInit(): void {}\n  private buildForm() {\n    this.form = new FormGroup({\n      category: new FormControl('', [Validators.required]),\n    });\n  }\n  save(event: Event) {\n    event.preventDefault();\n    if (this.form.value.category) {\n      this.categoriasService.handleSubmit(this.form.value.category);\n    }\n    this.form.reset(true);\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"save($event)\">\n  <input formControlName=\"category\" type=\"text\">\n  <button type=\"submit\">Agregar</button>\n</form>\n","import { GIFResponse } from './../../Interfaces/GifResponse.interface';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-gif-grit-item',\n  templateUrl: './gif-grit-item.component.html',\n  styleUrls: ['./gif-grit-item.component.scss'],\n})\nexport class GifGritItemComponent implements OnInit {\n  @Input() categoria: string;\n  gifs: any;\n  isLoading = true;\n  constructor(private http: HttpClient) {}\n  ngOnInit(): void {\n    this.http\n      .get(\n        `https://api.giphy.com/v1/gifs/search?api_key=ZsKy0kYfYxbDYmydyMg9dp33R2iO69wQ&q=${this.categoria}&limit=9&offset=0&rating=g`\n      )\n      .subscribe((Response: GIFResponse) => {\n        const data = Response.data;\n        this.isLoading = false;\n        const gifs = data.map((gif) => ({\n          id: gif.id,\n          title: gif.title,\n          url: gif.images.downsized_medium.url,\n        }));\n        this.gifs = gifs;\n      });\n  }\n}\n","<div *ngIf='gifs' class=\"card-container\">\n  <p *ngIf=\"isLoading\">Cargando ...</p>\n  <h3 *ngIf=\"gifs.length === 0 && !isLoading\"> No se encontraron resultados</h3>\n  <div *ngFor=\"let gif of gifs\" class=\"card\">\n    <img loading=\"lazy\" [src]='gif.url' [alt]='gif.title' />\n    <p>{{gif.title}}</p>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'GiftAppAngular';\n}\n","<div class=\"container\">\n  <h1>Gift App</h1>\n  <app-gif-grid></app-gif-grid>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoriasService {\n  categorias: Array<string> = ['X-Men', 'Avengers', 'DC'];\n  constructor() {}\n  handleSubmit = (input) => {\n    if (this.categorias.includes(input)) {\n      return this.categorias;\n    }\n    if (input.trim().length > 0) {\n      return (this.categorias = [input, ...this.categorias]);\n    }\n    return this.categorias;\n  };\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { GifGridComponent } from './Componentes/gif-grid/gif-grid.component';\nimport { GifGritItemComponent } from './Componentes/gif-grit-item/gif-grit-item.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormGifComponent } from './Componentes/form-gif/form-gif.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    GifGridComponent,\n    GifGritItemComponent,\n    FormGifComponent,\n  ],\n  imports: [BrowserModule, HttpClientModule, FormsModule, ReactiveFormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}